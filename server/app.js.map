{"version":3,"sources":["../../server/app.js"],"names":[],"mappings":";;;;AAIA;;;;;;AAEA;;;;AACA;;;;AAEA;;;;AACA;;;;;;AAFA,mBAAS,OAAT,GAAmB,QAAQ,UAAR,CAAnB;;;;AAKA,mBAAS,OAAT,CAAiB,sBAAO,KAAP,CAAa,GAAb,EAAkB,sBAAO,KAAP,CAAa,OAAb,CAAnC;AACA,mBAAS,UAAT,CAAoB,EAApB,CAAuB,OAAvB,EAAgC,UAAS,GAAT,EAAc;AAC5C,UAAQ,KAAR,CAAc,+BAA+B,GAA/B,CAAd,CAD4C;AAE5C,UAAQ,IAAR,CAAa,CAAC,CAAD,CAAb,CAF4C;CAAd,CAAhC;;;AAMA,IAAI,sBAAO,MAAP,EAAe;AAAE,UAAQ,eAAR,EAAF;CAAnB;;;AAGA,IAAI,MAAM,wBAAN;AACJ,IAAI,SAAS,eAAK,YAAL,CAAkB,GAAlB,CAAT;AACJ,IAAI,WAAW,QAAQ,WAAR,EAAqB,MAArB,EAA6B;AAC1C,eAAa,sBAAO,GAAP,KAAe,YAAf;AACb,QAAM,mBAAN;CAFa,CAAX;;;;AAQJ,IAAI,GAAJ,CAAQ,kBAAQ,MAAR,CAAe,YAAY,SAAZ,CAAvB;;;AAKA,QAAQ,mBAAR,EAA6B,OAA7B,CAAqC,QAArC;AACA,QAAQ,kBAAR,EAA4B,OAA5B,CAAoC,GAApC;AACA,QAAQ,UAAR,EAAoB,OAApB,CAA4B,GAA5B;;;AAOA,SAAS,WAAT,GAAuB;AACrB,MAAI,gBAAJ,GAAuB,OAAO,MAAP,CAAc,sBAAO,IAAP,EAAa,sBAAO,EAAP,EAAW,YAAW;AACtE,YAAQ,GAAR,CAAY,4CAAZ,EAA0D,sBAAO,IAAP,EAAa,IAAI,GAAJ,CAAQ,KAAR,CAAvE,EADsE;GAAX,CAA7D,CADqB;CAAvB;;AAMA,4BAAa,WAAb;;;AAKA,UAAU,OAAO,OAAP,GAAiB,GAAjB","file":"app.js","sourcesContent":["/**\n * Main application file\n */\n\n'use strict';\n\nimport express from 'express';\nimport mongoose from 'mongoose';\nmongoose.Promise = require('bluebird');\nimport config from './config/environment';\nimport http from 'http';\n\n// Connect to MongoDB\nmongoose.connect(config.mongo.uri, config.mongo.options);\nmongoose.connection.on('error', function(err) {\n  console.error('MongoDB connection error: ' + err);\n  process.exit(-1);\n});\n\n// Populate databases with sample data\nif (config.seedDB) { require('./config/seed'); }\n\n// Setup server\nvar app = express();\nvar server = http.createServer(app);\nvar socketio = require('socket.io')(server, {\n  serveClient: config.env !== 'production',\n  path: '/socket.io-client'\n});\n\n\n// hiep static file\n//app.use(express.static('public'));\napp.use(express.static(__dirname + '/public'));\n\n\n\n// import routes\nrequire('./config/socketio').default(socketio);\nrequire('./config/express').default(app);\nrequire('./routes').default(app);\n\n\n\n\n\n// Start server\nfunction startServer() {\n  app.angularFullstack = server.listen(config.port, config.ip, function() {\n    console.log('Express server listening on %d, in %s mode', config.port, app.get('env'));\n  });\n}\n\nsetImmediate(startServer);\n\n\n\n// Expose app\nexports = module.exports = app;\n"]}