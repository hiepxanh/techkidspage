{"version":3,"sources":["../../../../server/api/game/game.integration.js"],"names":[],"mappings":"AAAA;;AAGA;;;;;;AADA,IAAI,MAAM,QAAQ,OAAR,CAAN;;;AAGJ,IAAI,OAAJ;;AAEA,SAAS,WAAT,EAAsB,YAAW;;AAE/B,WAAS,gBAAT,EAA2B,YAAW;AACpC,QAAI,KAAJ,CADoC;;AAGpC,eAAW,UAAS,IAAT,EAAe;AACxB,+BAAQ,GAAR,EACG,GADH,CACO,YADP,EAEG,MAFH,CAEU,GAFV,EAGG,MAHH,CAGU,cAHV,EAG0B,MAH1B,EAIG,GAJH,CAIO,UAAC,GAAD,EAAM,GAAN,EAAc;AACjB,YAAI,GAAJ,EAAS;AACP,iBAAO,KAAK,GAAL,CAAP,CADO;SAAT;AAGA,gBAAQ,IAAI,IAAJ,CAJS;AAKjB,eALiB;OAAd,CAJP,CADwB;KAAf,CAAX,CAHoC;;AAiBpC,OAAG,gCAAH,EAAqC,YAAW;AAC9C,YAAM,MAAN,CAAa,EAAb,CAAgB,UAAhB,CAA2B,KAA3B,EAD8C;KAAX,CAArC,CAjBoC;GAAX,CAA3B,CAF+B;;AAyB/B,WAAS,iBAAT,EAA4B,YAAW;AACrC,eAAW,UAAS,IAAT,EAAe;AACxB,+BAAQ,GAAR,EACG,IADH,CACQ,YADR,EAEG,IAFH,CAEQ;AACJ,cAAM,UAAN;AACA,cAAM,+BAAN;OAJJ,EAMG,MANH,CAMU,GANV,EAOG,MAPH,CAOU,cAPV,EAO0B,MAP1B,EAQG,GARH,CAQO,UAAC,GAAD,EAAM,GAAN,EAAc;AACjB,YAAI,GAAJ,EAAS;AACP,iBAAO,KAAK,GAAL,CAAP,CADO;SAAT;AAGA,kBAAU,IAAI,IAAJ,CAJO;AAKjB,eALiB;OAAd,CARP,CADwB;KAAf,CAAX,CADqC;;AAmBrC,OAAG,4CAAH,EAAiD,YAAW;AAC1D,cAAQ,IAAR,CAAa,MAAb,CAAoB,KAApB,CAA0B,UAA1B,EAD0D;AAE1D,cAAQ,IAAR,CAAa,MAAb,CAAoB,KAApB,CAA0B,+BAA1B,EAF0D;KAAX,CAAjD,CAnBqC;GAAX,CAA5B,CAzB+B;;AAmD/B,WAAS,oBAAT,EAA+B,YAAW;AACxC,QAAI,IAAJ,CADwC;;AAGxC,eAAW,UAAS,IAAT,EAAe;AACxB,+BAAQ,GAAR,EACG,GADH,CACO,gBAAgB,QAAQ,GAAR,CADvB,CAEG,MAFH,CAEU,GAFV,EAGG,MAHH,CAGU,cAHV,EAG0B,MAH1B,EAIG,GAJH,CAIO,UAAC,GAAD,EAAM,GAAN,EAAc;AACjB,YAAI,GAAJ,EAAS;AACP,iBAAO,KAAK,GAAL,CAAP,CADO;SAAT;AAGA,eAAO,IAAI,IAAJ,CAJU;AAKjB,eALiB;OAAd,CAJP,CADwB;KAAf,CAAX,CAHwC;;AAiBxC,cAAU,YAAW;AACnB,aAAO,EAAP,CADmB;KAAX,CAAV,CAjBwC;;AAqBxC,OAAG,wCAAH,EAA6C,YAAW;AACtD,WAAK,IAAL,CAAU,MAAV,CAAiB,KAAjB,CAAuB,UAAvB,EADsD;AAEtD,WAAK,IAAL,CAAU,MAAV,CAAiB,KAAjB,CAAuB,+BAAvB,EAFsD;KAAX,CAA7C,CArBwC;GAAX,CAA/B,CAnD+B;;AA+E/B,WAAS,oBAAT,EAA+B,YAAW;AACxC,QAAI,WAAJ,CADwC;;AAGxC,eAAW,UAAS,IAAT,EAAe;AACxB,+BAAQ,GAAR,EACG,GADH,CACO,gBAAgB,QAAQ,GAAR,CADvB,CAEG,IAFH,CAEQ;AACJ,cAAM,cAAN;AACA,cAAM,6BAAN;OAJJ,EAMG,MANH,CAMU,GANV,EAOG,MAPH,CAOU,cAPV,EAO0B,MAP1B,EAQG,GARH,CAQO,UAAS,GAAT,EAAc,GAAd,EAAmB;AACtB,YAAI,GAAJ,EAAS;AACP,iBAAO,KAAK,GAAL,CAAP,CADO;SAAT;AAGA,sBAAc,IAAI,IAAJ,CAJQ;AAKtB,eALsB;OAAnB,CARP,CADwB;KAAf,CAAX,CAHwC;;AAqBxC,cAAU,YAAW;AACnB,oBAAc,EAAd,CADmB;KAAX,CAAV,CArBwC;;AAyBxC,OAAG,sCAAH,EAA2C,YAAW;AACpD,kBAAY,IAAZ,CAAiB,MAAjB,CAAwB,KAAxB,CAA8B,cAA9B,EADoD;AAEpD,kBAAY,IAAZ,CAAiB,MAAjB,CAAwB,KAAxB,CAA8B,6BAA9B,EAFoD;KAAX,CAA3C,CAzBwC;GAAX,CAA/B,CA/E+B;;AA+G/B,WAAS,uBAAT,EAAkC,YAAW;;AAE3C,OAAG,+CAAH,EAAoD,UAAS,IAAT,EAAe;AACjE,+BAAQ,GAAR,EACG,MADH,CACU,gBAAgB,QAAQ,GAAR,CAD1B,CAEG,MAFH,CAEU,GAFV,EAGG,GAHH,CAGO,UAAC,GAAD,EAAM,GAAN,EAAc;AACjB,YAAI,GAAJ,EAAS;AACP,iBAAO,KAAK,GAAL,CAAP,CADO;SAAT;AAGA,eAJiB;OAAd,CAHP,CADiE;KAAf,CAApD,CAF2C;;AAc3C,OAAG,kDAAH,EAAuD,UAAS,IAAT,EAAe;AACpE,+BAAQ,GAAR,EACG,MADH,CACU,gBAAgB,QAAQ,GAAR,CAD1B,CAEG,MAFH,CAEU,GAFV,EAGG,GAHH,CAGO,UAAC,GAAD,EAAM,GAAN,EAAc;AACjB,YAAI,GAAJ,EAAS;AACP,iBAAO,KAAK,GAAL,CAAP,CADO;SAAT;AAGA,eAJiB;OAAd,CAHP,CADoE;KAAf,CAAvD,CAd2C;GAAX,CAAlC,CA/G+B;CAAX,CAAtB","file":"game.integration.js","sourcesContent":["'use strict';\n\nvar app = require('../..');\nimport request from 'supertest';\n\nvar newGame;\n\ndescribe('Game API:', function() {\n\n  describe('GET /api/games', function() {\n    var games;\n\n    beforeEach(function(done) {\n      request(app)\n        .get('/api/games')\n        .expect(200)\n        .expect('Content-Type', /json/)\n        .end((err, res) => {\n          if (err) {\n            return done(err);\n          }\n          games = res.body;\n          done();\n        });\n    });\n\n    it('should respond with JSON array', function() {\n      games.should.be.instanceOf(Array);\n    });\n\n  });\n\n  describe('POST /api/games', function() {\n    beforeEach(function(done) {\n      request(app)\n        .post('/api/games')\n        .send({\n          name: 'New Game',\n          info: 'This is the brand new game!!!'\n        })\n        .expect(201)\n        .expect('Content-Type', /json/)\n        .end((err, res) => {\n          if (err) {\n            return done(err);\n          }\n          newGame = res.body;\n          done();\n        });\n    });\n\n    it('should respond with the newly created game', function() {\n      newGame.name.should.equal('New Game');\n      newGame.info.should.equal('This is the brand new game!!!');\n    });\n\n  });\n\n  describe('GET /api/games/:id', function() {\n    var game;\n\n    beforeEach(function(done) {\n      request(app)\n        .get('/api/games/' + newGame._id)\n        .expect(200)\n        .expect('Content-Type', /json/)\n        .end((err, res) => {\n          if (err) {\n            return done(err);\n          }\n          game = res.body;\n          done();\n        });\n    });\n\n    afterEach(function() {\n      game = {};\n    });\n\n    it('should respond with the requested game', function() {\n      game.name.should.equal('New Game');\n      game.info.should.equal('This is the brand new game!!!');\n    });\n\n  });\n\n  describe('PUT /api/games/:id', function() {\n    var updatedGame;\n\n    beforeEach(function(done) {\n      request(app)\n        .put('/api/games/' + newGame._id)\n        .send({\n          name: 'Updated Game',\n          info: 'This is the updated game!!!'\n        })\n        .expect(200)\n        .expect('Content-Type', /json/)\n        .end(function(err, res) {\n          if (err) {\n            return done(err);\n          }\n          updatedGame = res.body;\n          done();\n        });\n    });\n\n    afterEach(function() {\n      updatedGame = {};\n    });\n\n    it('should respond with the updated game', function() {\n      updatedGame.name.should.equal('Updated Game');\n      updatedGame.info.should.equal('This is the updated game!!!');\n    });\n\n  });\n\n  describe('DELETE /api/games/:id', function() {\n\n    it('should respond with 204 on successful removal', function(done) {\n      request(app)\n        .delete('/api/games/' + newGame._id)\n        .expect(204)\n        .end((err, res) => {\n          if (err) {\n            return done(err);\n          }\n          done();\n        });\n    });\n\n    it('should respond with 404 when game does not exist', function(done) {\n      request(app)\n        .delete('/api/games/' + newGame._id)\n        .expect(404)\n        .end((err, res) => {\n          if (err) {\n            return done(err);\n          }\n          done();\n        });\n    });\n\n  });\n\n});\n"]}